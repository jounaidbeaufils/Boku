# -*- coding: utf-8 -*-
"""BokuSandbox.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z5Bw2lLO1LfZd1gYhYTZZBh6aVab76Ss
"""

import numpy as np

zero_array = np.zeros((5,10))
one_array = np.zeros((5,10))

zero_array[0][6:] = -1
one_array[0][7:] = -1
zero_array[1][8:] = -1
one_array[1][9] = -1

zero_array[-2][:1] = -1
one_array[-2][:2] = -1
zero_array[-1][:3] = -1
one_array[-1][:4] = -1

# print hexagon grid as rows
for i in range(len(zero_array)):
  print(zero_array[i])
  print(one_array[i])

neibghbour_vectors = {"n" : (0,1,-1),
                      "s" : (0,-1,1),
                      "se": (1,-1,0),
                      "nw": (-1,1,0),
                      "sw": (-1,0,1),
                      "ne": (1,0,-1)}

def notation_to_coord(notation):
  letter = notation[0]
  z = -(ord(letter) - ord('A'))

  number = notation[1:]
  y = int(number) -1

  x = 1 - int(number) - z

  return x, y, z

notation_to_coord("G4")

def coord_to_notation(x,y,z):
  notation = ""
  alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

  notation += alpha[-z]
  notation += str(y + 1)

  return notation

coord_to_notation(2,5,-7)

coord_list = set((0,0,0), (-1,1,0), (-2,2,0), (-3,3,0), (-4,4,0), (-5,5,0), #A
              (1,0,-1), (0,1,-1), (-1,2,-1), (-2,3-1), (-3,4,-1), (-4,5,-1), (-5,6,-1), #B
              (2, 0, -2), (1, 1, -2), (0, 2, -2), (-1, 3, -2), (-2, 4, -2), (-3, 5, -2), (-4, 6, -2), (-5, 7, -2), #C
              (3, 0, -3), (2, 1, -3), (1, 2, -3), (0, 3, -3), (-1, 4, -3), (-2, 5, -3), (-3, 6, -3), (-4, 7, -3), (-5, 8, -3), #D
              (4, 0, -4), (3, 1, -4), (2, 2, -4), (1, 3, -4), (0, 4, -4), (-1, 5, -4), (-2, 6, -4), (-3, 7, -4), (-4, 8, -4), (-5, 9, -4), #E
              (5, 0, -5), (4, 1, -5), (3, 2, -5), (2, 3, -5), (1, 4, -5), (0, 5, -5), (-1, 6, -5), (-2, 7, -5), (-3, 8, -5), (-4, 9, -5), #F
              (5, 1, -6), (4, 2, -6), (3, 3, -6), (2, 4, -6), (1, 5, -6), (0, 6, -6), (-1, 7, -6), (-2, 8, -6), (-3, 9, -6), #G
              (5, 2, -7), (4, 3, -7), (3, 4, -7), (2, 5, -7), (1, 6, -7), (0, 7, -7), (-1, 8, -7), (-2, 9, -7), #H
              (5, 3, -8), (4, 4, -8), (3, 5, -8), (2, 6, -8), (1, 7, -8), (0, 8, -8), (-1, 9, -8), #I
              (5, 4, -9), (4, 5, -9), (3, 6, -9), (2, 7, -9), (1, 8, -9), (0, 9, -9) #J
                 )

row_len = [(5,10)]

new_list = []
for r, c in row_len:
  print(f"leter: {r}, count: {c}")
  new_list = []
  for i in range(c):
    x,y,z = 1,0,-1
    dx, dy, dz, = -1, 1, 0
    new_list.append((x*r+dx*i, y*r+dy*i, z*r+dz*i))
  print(new_list)

xi, yi, zi = 5,4,-9
xd, yd, zd = -1, 1, 0
new_list = []
for i in range(6):
  new_list.append((xi+xd*i, yi+yd*i, zi+zd*i))

print(new_list)